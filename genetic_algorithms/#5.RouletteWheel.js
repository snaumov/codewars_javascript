const select = (population, fitnesses) => {
  var randomNum = Math.random();
  
  var sum = 0;
  for(var i = 0; i < population.length; i++) {
      if(randomNum < sum) {
        return population[i];
      } else {
          sum += fitnesses[i];
      }
  }
  return population[population.length - 1]
};

const select1 = (population, fitnesses) => {
  var randomNum = Math.random();

  var filteredPop = population.filter((value, ind) => {
      return fitnesses[ind] > randomNum;
  })

  return filteredPop[Math.floor(Math.random() * filteredPop.length)];
}

console.log(select1( [ 0,
     42,
     1337,
     0.7701838552373157,
     0.008214043327835041,
     0.960892827444376,
     0.11711346143844836,
     0.9703050783250977,
     0.02590142919396099,
     0.5436548701239425,
     0.7549320155539276,
     0.7286931827094949,
     0.3113653886453418,
     0.861093323041128,
     0.005372832799455551,
     0.8156578953406428,
     0.06273564693510258,
     0.08947751461041009,
     0.6184917199511539,
     0.4246316927804983,
     0.12927130433302092,
     0.4420640161845213,
     0.2831142136815601,
     0.4029259617595897,
     0.05934024548870265,
     0.33768769165896595,
     0.1428972322270059,
     0.6499438087280447,
     0.4870686018163528,
     0.43663983053343713,
     0.8023341946609581,
     0.5506744619333728,
     0.07267164313343066,
     0.312506352428763,
     0.1555690688647533,
     0.8677050972755713,
     0.12964920416428427,
     0.004112690206390379,
     0.1363374880452526,
     0.19433721166298956,
     0.5596582316934691,
     0.3324631367582016,
     0.24316328355974925,
     0.10472825838660516,
     0.37286180799266977,
     0.6148418701311178,
     0.840729196809554,
     0.5805297340554476,
     0.8307975633090048,
     0.1451362102908227,
     0.1573574948470553,
     0.7058630800639527,
     0.07266409258927231 ], 
      [ 1e-20,
     0.55,
     0.99999999,
     0.0057884739994843075,
     0.004961620768243158,
     0.008968758566994256,
     0.0013171321508155232,
     0.005882496437037714,
     0.005846828086238807,
     0.008093527927837877,
     0.0014744713280274047,
     0.0032760155241459187,
     0.0014081644592918875,
     0.009516715311934418,
     0.002250157049192474,
     0.005801646941386259,
     0.008662619135498213,
     0.003879342275864366,
     0.0073028924565728915,
     0.009516369563394824,
     0.0074355394086768325,
     0.004338927059365206,
     0.003627462587941033,
     0.007086776742324219,
     0.00742500144127704,
     0.007322876204634874,
     0.009531207155140142,
     0.0074894673337497445,
     0.005517298890482789,
     0.0030734997813668817,
     0.009770388415127784,
     0.0011724632162687487,
     0.004308594126975893,
     0.006694670496753576,
     0.005234516980864536,
     0.003726359033838436,
     0.0016169946597813056,
     0.00940899584924764,
     0.007352814844023907,
     0.0033735208552576348,
     0.0014668973738948532,
     0.008274161795720394,
     0.006971683501852241,
     0.00893685937925102,
     0.0007851724461732257,
     0.0030681155800917925,
     0.007379248736642867,
     0.008843814214763768,
     0.005459502162511847,
     0.0025990978796334475,
     0.006396465973000607,
     0.0012237647032382615,
     0.009556958137124625 ]))